plugins {
    id 'java'
    id 'application'
    id 'distribution'
    id 'com.commercehub.gradle.plugin.avro' version '0.22.0'
    id 'com.github.jk1.dependency-license-report' version '1.16'
}

group 'org.jlab.kafka.streams'
version '1.1.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.compilerArgs += ["-Xlint:unchecked"]
}

repositories {
    mavenCentral()

    maven {
        url "https://packages.confluent.io/maven"
    }
}

dependencies {
    implementation group: 'org.apache.kafka', name: 'kafka-streams', version: '2.6.0'
    implementation "io.confluent:kafka-streams-avro-serde:6.0.1"
    implementation "org.apache.avro:avro:1.10.1"
    implementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.30'
    testImplementation group: 'junit', name: 'junit', version: '4.13.1'
    testImplementation group: 'org.apache.kafka', name: 'kafka-streams-test-utils', version: '2.6.0'
}

test {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

jar {
    archiveFileName = 'registrations2epics.jar'
}

application {
    mainClassName = 'org.jlab.kafka.streams.Registrations2Epics'
}

build {
    dependsOn(installDist)
}

installDist.dependsOn(generateLicenseReport)
distTar.dependsOn(generateLicenseReport)
distZip.dependsOn(generateLicenseReport)

run {
    classpath += files('config')
}

distributions {
    main {
        contents {
            from("build/reports/dependency-license") {
                into "dependency-license"
            }
            from('config') {
                into 'config'
            }
        }
    }
}

startScripts {
    classpath += files('config')

    // https://discuss.gradle.org/t/classpath-in-application-plugin-is-building-always-relative-to-app-home-lib-directory/2012
    doLast {
        def windowsScriptFile = file getWindowsScript()
        def unixScriptFile = file getUnixScript()
        windowsScriptFile.text = windowsScriptFile.text.replace('%APP_HOME%\\lib\\config', '%APP_HOME%\\config')
        unixScriptFile.text = unixScriptFile.text.replace('$APP_HOME/lib/config', '$APP_HOME/config')
    }
}